# Sample workflow for building and deploying a Site to Cloudflare Pages
name: Deploy Site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "cloudflare"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: "0.128.0"
      HUGO_THEME_VERSION: "0.3.0"
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout
        uses: actions/checkout@v4
      - name: Site Build
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/.build
          mkdir -p ${GITHUB_WORKSPACE}/site/themes/LoveIt
          mkdir -p ${GITHUB_WORKSPACE}/site/content/posts
          mkdir -p ${GITHUB_WORKSPACE}/site/static/resources
      - name: Site Theme Install
        run: |
          wget -O ${{ runner.temp }}/LoveIt.tar.gz https://github.com/dillonzq/LoveIt/archive/refs/tags/v${HUGO_THEME_VERSION}.tar.gz && tar -xvf ${{ runner.temp }}/LoveIt.tar.gz -C ${GITHUB_WORKSPACE}/site/themes/LoveIt --strip-components=1
      - name: Site Copy
        run: |
          cp -rf ${GITHUB_WORKSPACE}/posts/* ${GITHUB_WORKSPACE}/site/content/posts/
          cp -rf ${GITHUB_WORKSPACE}/resources/* ${GITHUB_WORKSPACE}/site/static/resources/
          cd ${GITHUB_WORKSPACE}/site
          hugo --minify --gc --buildDrafts --destination ${GITHUB_WORKSPACE}/.build
      - name: Upload Artifacts
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .build --project-name=foliage-note --commit-dirty=true
